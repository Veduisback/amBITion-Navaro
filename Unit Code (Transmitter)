import time
import paho.mqtt.client as mqtt
import geopy.distance

# Waypoints of traffic signals (latitude, longitude, ID)
traffic_signals = [
    {"id": "TS1", "coords": (12.9716, 77.5946)},
    {"id": "TS2", "coords": (12.9721, 77.6000)},
    {"id": "TS3", "coords": (12.9750, 77.6050)}
]

# MQTT broker (simulate control center)
BROKER = "broker.hivemq.com"
TOPIC = "traffic/signal/request"

client = mqtt.Client()
client.connect(BROKER, 1883, 60)

def get_current_location():
    # Example: Replace with real GPS module code
    return (12.9720, 77.5990)  # current ambulance location

def find_nearest_signal(current_location):
    nearest = None
    min_dist = float("inf")
    for signal in traffic_signals:
        dist = geopy.distance.distance(current_location, signal["coords"]).m
        if dist < min_dist:
            min_dist = dist
            nearest = signal
    return nearest, min_dist

while True:
    location = get_current_location()
    nearest_signal, distance = find_nearest_signal(location)

    if nearest_signal and distance < 500:  # within 500 meters
        message = {
            "ambulance_id": "AMB123",
            "signal_id": nearest_signal["id"],
            "action": "REQUEST_GREEN",
            "location": location
        }
        client.publish(TOPIC, str(message))
        print("ðŸš‘ Request sent:", message)

    time.sleep(5)
